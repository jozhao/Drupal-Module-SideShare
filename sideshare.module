<?php

/**
 * @file
 * Various module information.
 */

/**
 * Implements hook_menu().
 *
 * @return array @ingroup hooks
 *         @ingroup menu
 */
function sideshare_menu() {
  $items = array();
  // Administration pages.
  $items['admin/config/sideshare'] = array(
      'title' => 'SideShare',
      'description' => 'Configure SideShare Widget',
      'position' => 'left',
      'page callback' => '_sideshare_admin_menu_block_page',
      'access arguments' => array(
          'access sideshare administer'
      ),
      'file' => 'includes/sideshare.admin.inc',
      'weight' => 0
  );
  $items['admin/config/sideshare/settings'] = array(
      'title' => 'Configure SideShare',
      'description' => 'Configure SideShare Widget',
      'page callback' => 'drupal_get_form',
      'page arguments' => array(
          '_sideshare_settings'
      ),
      'access callback' => 'user_access',
      'access arguments' => array(
          'access sideshare administer'
      ),
      'type' => MENU_NORMAL_ITEM,
      'file' => 'includes/sideshare.admin.inc',
      'weight' => - 10
  );
  $items['admin/config/sideshare/buttons'] = array(
      'title' => 'Buttons management',
      'description' => 'Share Buttons management',
      'page callback' => 'drupal_get_form',
      'page arguments' => array(
          '_sideshare_button_management'
      ),
      'access callback' => 'user_access',
      'access arguments' => array(
          'access sideshare administer'
      ),
      'type' => MENU_NORMAL_ITEM,
      'file' => 'includes/sideshare.admin.inc',
      'weight' => - 10
  );
  $items['admin/config/sideshare/buttons/add'] = array(
      'title' => 'Add New Button',
      'page callback' => 'drupal_get_form',
      'page arguments' => array(
          '_sideshare_button_add'
      ),
      'access callback' => 'user_access',
      'access arguments' => array(
          'access sideshare administer'
      ),
      'type' => MENU_CALLBACK,
      'file' => 'includes/sideshare.admin.inc'
  );
  $items['admin/config/sideshare/buttons/edit'] = array(
      'title' => 'Edit Button',
      'page callback' => 'drupal_get_form',
      'page arguments' => array(
          '_sideshare_button_edit'
      ),
      'access callback' => 'user_access',
      'access arguments' => array(
          'access sideshare administer'
      ),
      'type' => MENU_CALLBACK,
      'file' => 'includes/sideshare.admin.inc'
  );
  $items['admin/config/sideshare/buttons/del'] = array(
      'title' => 'Delete Button',
      'page callback' => 'drupal_get_form',
      'page arguments' => array(
          '_sideshare_button_confirm_delete'
      ),
      'access callback' => 'user_access',
      'access arguments' => array(
          'access sideshare administer'
      ),
      'type' => MENU_CALLBACK,
      'file' => 'includes/sideshare.admin.inc'
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function sideshare_permission() {
  $perms = array(
      'access sideshare administer' => array(
          'title' => t('Administer SideShare'),
          'restrict access' => TRUE
      )
  );
  return $perms;
}

/**
 * Implements hook_theme().
 */
function sideshare_theme() {
  return array(
      'sideshare_admin_buttons_list' => array(
          'file' => 'includes/sideshare.admin.theme.inc',
          'variables' => array(
              'var' => ''
          )
      ),
      'sideshare_buttons_list' => array(
          'template' => 'sideshare-buttons-list',
          'path' => drupal_get_path('module', 'sideshare') . '/templates'
      )
  );
}

/**
 * Implements hook_init().
 */
function sideshare_init() {
  // Only load the assets while not in admin page.
  if (_pageAllow()) {
    drupal_add_css(drupal_get_path('module', 'sideshare') . '/css/sideshare.css');
    drupal_add_js(drupal_get_path('module', 'sideshare') . '/js/sideshare.js');
  }
}

/**
 * Implements hook_process().
 */
function sideshare_preprocess_region(&$variables) {
  // Only load the assets while not in admin page.
  if (! _pageAllow()) {
    return;
  }
  // @todo: Choose the region.
  if ($variables['region'] == 'content') {
    // Add embed sideshare to region.
    $variables['content'] = $variables['content'] . _embed_sideshare();
  }
}

/*
 * Embed sideshare.
 */
function _embed_sideshare() {
  $buttons = unserialize(variable_get('sideshare_buttons', _sideshare_buttons_default()));
  if (is_array($buttons) && count($buttons)) {
    usort($buttons, "_sideshare_cmp_up");
  }
  $html = theme('sideshare_buttons_list', array(
      'buttons' => $buttons
  ));
  return $html;
}

/*
 * Provide default buttons.
 */
function _sideshare_buttons_default() {
  $buttons = array();
  
  $button_fb = new stdClass();
  $button_fb->button_name = 'Facebook';
  $button_fb->button_machine_name = 'sideshare_facebook';
  $button_fb->button_codes = '';
  $button_fb->button_icon = drupal_get_path('module', 'sideshare') . '/images/fb.png';
  $button_fb->button_enabled = true;
  $button_fb->button_weight = '0';
  
  $buttons[$button_fb->button_name] = $button_fb;
  
  $button_twitter = new stdClass();
  $button_twitter->button_name = 'Twitter';
  $button_twitter->button_machine_name = 'sideshare_twitter';
  $button_twitter->button_codes = '';
  $button_twitter->button_icon = drupal_get_path('module', 'sideshare') . '/images/tw.png';
  $button_twitter->button_enabled = true;
  $button_twitter->button_weight = '1';
  
  $buttons[$button_twitter->button_name] = $button_twitter;
  
  $button_linkedin = new stdClass();
  $button_linkedin->button_name = 'LinkedIn';
  $button_linkedin->button_machine_name = 'sideshare_linkedin';
  $button_linkedin->button_codes = '';
  $button_linkedin->button_icon = drupal_get_path('module', 'sideshare') . '/images/in.png';
  $button_linkedin->button_enabled = true;
  $button_linkedin->button_weight = '2';
  
  $buttons[$button_linkedin->button_name] = $button_linkedin;
  
  $button_gplus = new stdClass();
  $button_gplus->button_name = 'Google Plus';
  $button_gplus->button_machine_name = 'sideshare_gplus';
  $button_gplus->button_codes = '';
  $button_gplus->button_icon = drupal_get_path('module', 'sideshare') . '/images/tw.png';
  $button_gplus->button_enabled = true;
  $button_gplus->button_weight = '3';
  
  $buttons[$button_gplus->button_name] = $button_gplus;
  
  return serialize($buttons);
}

/**
 * Display button image.
 */
function _sideshare_display_button($img, $name) {
  // Load the image.
  if (file_load($img)) {
    $image_path = file_load($img)->uri;
  }
  else {
    $image_path = $img;
  }
  
  // For displaying the original image.
  $image = theme('image', array(
      'path' => $image_path,
      'width' => '39',
      'height' => '36',
      'alt' => t($name)
  ));
  
  // @todo: For displaying a styled image.
  // $out = theme('image_style', array('path' => file_load($img->fid)->uri,
  // 'alt' => t($img->title), 'style_name' => 'my_image_style'));
  return $image;
}

/**
 * Function to calculate higher weight & move up.
 */
function _sideshare_cmp_up($a, $b) {
  return ($a->button_weight > $b->button_weight);
}

/**
 * Function to calculate lower weight & move down.
 */
function _sideshare_cmp_down($a, $b) {
  return ($a->button_weight < $b->button_weight);
}

/**
 * Helper return only if current page is for display.
 */
function _pageAllow() {
  if (arg(0) == 'admin') {
    return false;
  }
  if (arg(0) == 'node' && is_numeric(arg(1))) {
    // Only display widget with content type allowed.
    $node = menu_get_object();
    $node_type = $node->type;
    $allowed_content_type = variable_get('sideshare_display_' . $node_type . '_enabled', FALSE);
    if (! $allowed_content_type) {
      return false;
    }
    return true;
  }
  else {
    $allowed_page = variable_get('sideshare_display_pages_enabled', FALSE);
    if (! $allowed_page) {
      return false;
    }
    return true;
  }
}
